{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAUC,GAC5BC,YAAW,WACLN,EACFI,EAAS,CAAEN,WAAUC,UAErBM,EAAS,CAAEP,WAAUC,S,GAEtBA,E,IApCWQ,SAASC,cAAc,SAC/BC,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOH,EAAII,cAAcf,MAAMgB,OAC1CC,EAAYH,OAAOH,EAAII,cAAcG,KAAKF,OAC1CG,EAAkBL,OAAOH,EAAII,cAAcK,OAAOJ,OAE/CK,EAAI,EAAGA,GAAKF,EAAiBE,GAAK,EACzCvB,EAAcuB,EAAGR,GACdS,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O,IAIjDa,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formInput = document.querySelector('.form');\nformInput.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n\n  let firstDelay = Number(evt.currentTarget.delay.value);\n  const stepDelay = Number(evt.currentTarget.step.value);\n  const amountIteration = Number(evt.currentTarget.amount.value);\n\n  for (let i = 1; i <= amountIteration; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n\n    firstDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolved, rejected) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolved({ position, delay });\n      } else {\n        rejected({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolved","rejected","setTimeout","document","querySelector","addEventListener","evt","preventDefault","firstDelay","Number","currentTarget","value","stepDelay","step","amountIteration","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ae32d65e.js.map"}